"use strict";(globalThis.webpackChunkmy_website=globalThis.webpackChunkmy_website||[]).push([[5733],{3907:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>h,contentTitle:()=>l,default:()=>a,frontMatter:()=>t,metadata:()=>s,toc:()=>c});var s=i(5972),r=i(4848),o=i(8453);const t={slug:"jtr-guide",title:"A Guide to John the Ripper",authors:["paigehai"],tags:["guide","tools"],date:new Date("2025-06-21T00:00:00.000Z")},l=void 0,h={authorsImageUrls:[void 0]},c=[{value:"Installing John the Ripper",id:"installing-john-the-ripper",level:4},{value:"John the Ripper Commands",id:"john-the-ripper-commands",level:4},{value:"Wordlists",id:"wordlists",level:4},{value:"Format-Specific Cracking",id:"format-specific-cracking",level:4},{value:"Creating Custom Rules",id:"creating-custom-rules",level:4},{value:"1: Name Your Rule",id:"1-name-your-rule",level:5},{value:"2: Apply Modifiers",id:"2-apply-modifiers",level:5},{value:"3: Defining Character Sets",id:"3-defining-character-sets",level:5},{value:"4: Example Rule",id:"4-example-rule",level:5},{value:"5: Using Custom Rules",id:"5-using-custom-rules",level:5},{value:"Cracking Zip Files",id:"cracking-zip-files",level:4},{value:"Cracking Rar Files",id:"cracking-rar-files",level:4},{value:"Cracking Office Files",id:"cracking-office-files",level:4}];function d(e){const n={a:"a",code:"code",em:"em",h4:"h4",h5:"h5",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("div",{style:{textAlign:"center"},children:(0,r.jsx)("img",{src:"/blog/john-thumb.png",alt:"John the Ripper Thumbnail",style:{width:"100%",maxWidth:"500px",height:"auto"}})}),"\n",(0,r.jsx)(n.p,{children:"A quick cheat sheet for those who are interested in putting their development skills to the test. This cheat sheet provides the preliminary steps in setting up and deploying a GitHub Pages portfolio that you can use to show off your work."}),"\n",(0,r.jsxs)(n.p,{children:["In this guide, we will explore one of the most popular password cracking tool called ",(0,r.jsx)(n.strong,{children:"John the Ripper"}),". The most popular version of the tool is called ",(0,r.jsx)(n.strong,{children:"Jumbo John"})," and it is compatible with many different operating systems including Unix, MacOS, Windows, DOS, BeOS, and OpenVMS."]}),"\n",(0,r.jsx)(n.p,{children:"This guide will provide you a good foundation in understanding how John the Ripper works."}),"\n",(0,r.jsx)(n.h4,{id:"installing-john-the-ripper",children:"Installing John the Ripper"}),"\n",(0,r.jsx)(n.p,{children:"John the Ripper is available on many Linux distributions, but in this guide, we\u2019ll install the Jumbo community-enhanced version on an Ubuntu system.\r\nTo begin, run the command:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"sudo apt update\n"})}),"\n",(0,r.jsx)(n.p,{children:"Ensure you install all required dependencies using:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"sudo apt install -y build-essential libssl-dev git zlib1g-dev yasm pkg-config\n"})}),"\n",(0,r.jsx)(n.p,{children:"Next, you will need to clone the Jumbo version of John the Ripper:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"git clone https://github.com/openwall/john.git\n"})}),"\n",(0,r.jsxs)(n.p,{children:["and then move into the ",(0,r.jsx)(n.code,{children:"/src"})," directory."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"cd john/src\n"})}),"\n",(0,r.jsx)(n.p,{children:"Next, you will need to build John the Ripper Jumbo. The following command will configure and compile the tool."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"./configure && make -s clean && make -sj$(nproc)\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"Note"}),": ",(0,r.jsx)(n.code,{children:"$(nproc)"})," has been used to speed up the build by using all CPU cores. If you would prefer, you can replace this with a number instead."]}),"\n",(0,r.jsx)(n.p,{children:"Once compiled, add John to your system PATH (based on your shell) so you can run it from anywhere."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"echo 'export PATH=\"$HOME/john/run:$PATH\"' >> ~/.bashrc && source ~/.bashrc\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Lastly, we are going to set up a wrapper script that allows John to run with the full path to tis ececutable, so it can find its home directory from anywhere you run the ",(0,r.jsx)(n.code,{children:"john"})," command."]}),"\n",(0,r.jsx)(n.p,{children:"Run the following commands in your terminal:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"mkdir -p ~/.local/bin\r\necho '#!/bin/bash' > ~/.local/bin/john\r\necho 'exec \"$HOME/john/run/john\" \"$@\"' >> ~/.local/bin/john\r\nchmod +x ~/.local/bin/john\r\nnano ~/.bashrc\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Once you have reopened your ",(0,r.jsx)(n.code,{children:"~/.bash"})," file, the shell might point to ",(0,r.jsx)(n.code,{children:'export PATH="$HOME/john/run:$PATH"'})," instead of the wrapper script. If this is the case, just change this to ",(0,r.jsx)(n.code,{children:'export PATH="$HOME/.local/bin:$HOME/john/run:$PATH"'}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["Now reload ",(0,r.jsx)(n.code,{children:"~/.bash"})," using:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"source ~/.bashrc\n"})}),"\n",(0,r.jsx)(n.p,{children:"To verify your installation, run the command:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"john --help\n"})}),"\n",(0,r.jsx)(n.p,{children:"You should see John the Ripper's help output, which confirms it has been installed correctly."}),"\n",(0,r.jsx)("div",{className:"text--center margin-vert--lg",children:(0,r.jsx)("img",{src:"/blogjtr1.png",alt:"John the Ripper",className:"shadow--md",style:{maxWidth:"700px",width:"100%",height:"auto"}})}),"\n",(0,r.jsx)(n.h4,{id:"john-the-ripper-commands",children:"John the Ripper Commands"}),"\n",(0,r.jsx)(n.p,{children:"John the Ripper has quite basic syntax in terms of its commands, and I will aim to cover the specific options and modifiers."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"john"}),": this invokes the John the ripper tool"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"[options]"}),": where we specify the options we are wanting to use"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"[file path]"}),": this is the file that contains the hash you are trying to crack, if the file is in the same directly, then just denote the file name."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"John the Ripper has features that are built-in to detect the type of hash given. From this, the tool is able to apply rules and formats to crack the hash!"}),"\n",(0,r.jsx)(n.p,{children:"For hashes that you are unable to identify, this can be a great option, however, it can be unreliable."}),"\n",(0,r.jsx)(n.p,{children:"An example of this command:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"john [options] [file path]\n"})}),"\n",(0,r.jsx)(n.h4,{id:"wordlists",children:"Wordlists"}),"\n",(0,r.jsx)(n.p,{children:"When cracking hashes, you will likely use wordlists to crack the hashes in your experiments. I will introduce the following options that will help us refine our final command."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"--wordlist="}),": defines the wordlist to be used to crack the hash"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"[path to wordlist]"}),": the path to the wordlist"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Wordlists can help us reduce the time needed to crack a hash, as we are providing a curated list of likely passwords or phrases for John the Ripper to try directly. Rather than a brute-force attack, John the Ripper will cycle through the wordlist."}),"\n",(0,r.jsx)(n.p,{children:"To use a wordlist, the command will often be as follows:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"john --wordlist=[path to wordlist] [path to file]\n"})}),"\n",(0,r.jsxs)(n.p,{children:["A wordlist that is often used, is the ",(0,r.jsx)(n.strong,{children:"rockyou.txt"})," wordlist, which is a list that was derived from a breach of ",(0,r.jsx)(n.strong,{children:"rockyou.com"}),", where millions of user passwords were leaked. These passwords are now available as a wordlist, that you can download from GitHub."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"git clone https://github.com/danielmiessler/SecLists.git\n"})}),"\n",(0,r.jsx)(n.p,{children:"Then navigate to the correct folder:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"cd SecLists/Passwords/Leaked-Databases/\n"})}),"\n",(0,r.jsx)(n.p,{children:"and extract the file:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"tar xvzf rockyou.txt.tar.gz\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Usage:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"john --wordlist=rockyou.txt hash.txt\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"Note"}),": For easier access, you can move the extracted ",(0,r.jsx)(n.code,{children:"rockyou.txt"})," file to a common wordlist directly like ",(0,r.jsx)(n.code,{children:"usr/share/wordlists/"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"sudo mv rockyou.txt /usr/share/wordlists/\n"})}),"\n",(0,r.jsx)(n.p,{children:"Then you can refer to it in your commands like so:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"john --wordlist=/usr/share/wordlists/rockyou.txt hash.txt\n"})}),"\n",(0,r.jsx)(n.h4,{id:"format-specific-cracking",children:"Format-Specific Cracking"}),"\n",(0,r.jsx)(n.p,{children:"If available, you can give a specific format to John the Ripper to use to crack a password using the following syntax:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"john --format=[format] --wordlist=[path to wordlist] [path to file]\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"--format="}),": the flag to tell John that you are providing a hash of a specific format"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"[format]"}),": the format of the hash"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Usage:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"john --format=raw-md5 --wordlist=/usr/share/wordlists/rockyou.txt hash.txt\n"})}),"\n",(0,r.jsx)(n.p,{children:"For a full list of the formats that John can utilise, run the command:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"john --list=formats\n"})}),"\n",(0,r.jsx)(n.h4,{id:"creating-custom-rules",children:"Creating Custom Rules"}),"\n",(0,r.jsxs)(n.p,{children:["In John the Ripper, we are able to define rules that can be used to create passwords dynamically. This can extend the way that passwords are guessed. These rules are defined in the ",(0,r.jsx)(n.code,{children:"john.conf"})," file."]}),"\n",(0,r.jsx)(n.p,{children:"Based on how John has been installed, the configuration file can be found in:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/home/<user>/john/run"}),": as per the installation guide above"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/etc/john/john.conf"}),": if installed via a package manager or built from source, or"]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"/opt/john"})}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Custom rules can be defined under a named section in the aforementioned configuration file. Here is a breakdown of how to define and use them in your investigations:"}),"\n",(0,r.jsx)(n.h5,{id:"1-name-your-rule",children:"1: Name Your Rule"}),"\n",(0,r.jsx)(n.p,{children:"Each rule will begin with a section header, like so:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"[List.Rules:MyCustomRule]\n"})}),"\n",(0,r.jsxs)(n.p,{children:["This label ",(0,r.jsx)(n.code,{children:"MyCustomRule"})," will be used when referencing your rule with the argument ",(0,r.jsx)(n.code,{children:"--rules="}),", the syntax of which you will now be familiar with."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"--rules="}),": specifies the custom rule that will be used during password cracking"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"[rule]"}),": the rule label"]}),"\n"]}),"\n",(0,r.jsx)(n.h5,{id:"2-apply-modifiers",children:"2: Apply Modifiers"}),"\n",(0,r.jsx)(n.p,{children:"We can apply a wide range of modifiers to transform the words in the wordlist. Commonly used ones include:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Az"})," append characters to the end of a word"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"A0"})," prepend characters to the beginning"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"c"})," capitalise characters positionally (typically the first character)"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"These can be combined to create unique and powerful password transformations."}),"\n",(0,r.jsx)(n.h5,{id:"3-defining-character-sets",children:"3: Defining Character Sets"}),"\n",(0,r.jsx)(n.p,{children:"Modifiers are followed by character sets, placed inside square brackets, and enclosed in double quotes. These define the characters that will be used in the transformation. Some include:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"[0-9]"})," all digits from 0 to 9"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"[0]"})," the digit 0 only"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"[A-Z]"})," uppercase letters only"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"[a-z]"})," lowercase letters only"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"[A-z]"})," all upper and lowercase letters"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Usage:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"[a]"})," will include the letter 'a' only"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"[!#$%@]"})," specifies symbols ",(0,r.jsx)(n.code,{children:"!"}),", ",(0,r.jsx)(n.code,{children:"#"}),", ",(0,r.jsx)(n.code,{children:"$"}),", ",(0,r.jsx)(n.code,{children:"%"}),", and ",(0,r.jsx)(n.code,{children:"@"})]}),"\n"]}),"\n",(0,r.jsx)(n.h5,{id:"4-example-rule",children:"4: Example Rule"}),"\n",(0,r.jsx)(n.p,{children:"Let's say we wanted to match a password like Paigepassword1!, and we already has paigepassword in the wordlist, we could define our custom rule as follows:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'[List.Rules:PaigePassword]\r\ncAz"[0-9][!#$%@]"\n'})}),"\n",(0,r.jsx)(n.p,{children:"In this rule:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"c"})," capitalises the first character (",(0,r.jsx)(n.code,{children:"Paigepassword"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'Az"[0-9][!#$%@]'})," will append a number (0\u20139), then one of the symbols ",(0,r.jsx)(n.code,{children:"!#$%@"})]}),"\n"]}),"\n",(0,r.jsx)(n.h5,{id:"5-using-custom-rules",children:"5: Using Custom Rules"}),"\n",(0,r.jsx)(n.p,{children:"To use this rule in John the Ripper, you would run the following:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"john --wordlist=[path to wordlist] --rules=PaigePassword [path to file]\n"})}),"\n",(0,r.jsx)(n.h4,{id:"cracking-zip-files",children:"Cracking Zip Files"}),"\n",(0,r.jsxs)(n.p,{children:["John the Ripper has a tool called ",(0,r.jsx)(n.code,{children:"zip2john"})," which converts the Zip file into a hash format that John can understand. Commands are formatted as so:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"zip2john [options] [zip file] > [output file]\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"[options]"}),": allows us to pass checksum options to ",(0,r.jsx)(n.code,{children:"zip2john"}),", however, this shouldn't be necessary"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"[zip file]"}),": the path to the zip file"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:">"})," redirects the output from the previous command to another file"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"[output file]"}),": this file will store the output"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Usage:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"zip2john zipfile.zip > hash.txt\n"})}),"\n",(0,r.jsx)(n.p,{children:"Once we have the hash, we are now able to use this file as an input for John the Ripper to crack."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"john --wordlist=/usr/share/wordlists/rockyou.txt hash.txt\n"})}),"\n",(0,r.jsx)(n.h4,{id:"cracking-rar-files",children:"Cracking Rar Files"}),"\n",(0,r.jsxs)(n.p,{children:["John the Ripper has another tool called ",(0,r.jsx)(n.code,{children:"rar2john"})," which extracts the hash value from a RAR file. The command to do so is:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"rar2john [options] [rar file] > [output file]\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"[options]"}),": allows us to pass checksum options to ",(0,r.jsx)(n.code,{children:"rar2john"}),", however, this shouldn't be necessary"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"[rar file]"}),": the path to the RAR file"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:">"})," redirects the output from the previous command to another file"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"[output file]"}),": this file will store the output"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Usage:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"rar2john rarfile.rar > hash.txt\n"})}),"\n",(0,r.jsx)(n.p,{children:"Once the hash has been extracted, we can use this with John the Ripper and a wordlist of your choice:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"john --wordlist=/usr/share/wordlists/rockyou.txt hash.txt\n"})}),"\n",(0,r.jsx)(n.h4,{id:"cracking-office-files",children:"Cracking Office Files"}),"\n",(0,r.jsxs)(n.p,{children:["John the Ripper includes a tool called ",(0,r.jsx)(n.code,{children:"office2john"}),", which extracts the hash from Microsoft Office documents (e.g., .doc, .docx, .xls, .xlsx) and converts it into a format John can crack."]}),"\n",(0,r.jsx)(n.p,{children:"The basic command format is:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"office2john [office file] > [output file]\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"[office file]"}),": the path to the Office document"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:">"}),": redirects the output from the command into a new file"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"[output file]"}),": the file that will store the extracted hash"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Usage:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"office2john officefile.xlsx > hash.txt\n"})}),"\n",(0,r.jsx)(n.p,{children:"You can now pass the extracted file to John with a wordlist of your choice:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"john --wordlist=/usr/share/wordlists/rockyou.txt hash.txt\n"})}),"\n",(0,r.jsx)(n.p,{children:"This process works with most modern Office file formats, given they are password-protected."}),"\n",(0,r.jsxs)(n.p,{children:["I hope that this guide has been informative, and you have gained valuable insights into how John the Ripper functions. To test your skills, make sure you try out TryHackMe's ",(0,r.jsx)(n.a,{href:"https://tryhackme.com/room/johntheripperbasics",children:"John the Ripper: The Basics"})," room, of which this blog post was inspired by."]})]})}function a(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},5972:e=>{e.exports=JSON.parse('{"permalink":"/blog/jtr-guide","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2025-06-21-john-the-ripper.md","source":"@site/blog/2025-06-21-john-the-ripper.md","title":"A Guide to John the Ripper","description":"<img","date":"2025-06-21T00:00:00.000Z","tags":[{"inline":false,"label":"Guide","permalink":"/blog/tags/guide","description":"Step-by-step guides"},{"inline":false,"label":"Tools","permalink":"/blog/tags/tools","description":"Forensic tools and utilities"}],"readingTime":8.29,"hasTruncateMarker":true,"authors":[{"name":"Paige Haines","title":"Cyber Security Analyst","url":"https://linkedin.com/in/paigehai","page":{"permalink":"/blog/authors/paigehai"},"socials":{"linkedin":"https://www.linkedin.com/in/paigehai/","github":"https://github.com/paigehai"},"imageURL":"https://github.com/paigehai.png","key":"paigehai"}],"frontMatter":{"slug":"jtr-guide","title":"A Guide to John the Ripper","authors":["paigehai"],"tags":["guide","tools"],"date":"2025-06-21T00:00:00.000Z"},"unlisted":false,"prevItem":{"title":"ANZ Cyber Job Simulation Write Up","permalink":"/blog/anz-write-up"},"nextItem":{"title":"Moniker Link (CVE-2024-21413) Exploit Write-Up","permalink":"/blog/moniker-link-writeup"}}')},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>l});var s=i(6540);const r={},o=s.createContext(r);function t(e){const n=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);